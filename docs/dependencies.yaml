constraints: 
    no-hype: Not driven by hype or popularity
    no-native: No alternative built into JavaScript exists
    no-vanilla: Non-trivial to implement with vanilla JavaScript
    no-node: No alternative built into Node.js exists
    no-closer: No alternative that more closely matches the need exists
    no-deps: No alternative with fewer dependencies exists
    low-learning: Low learning curve
    low-maintenance: Low maintenance
    low-change: Low likelihood of changing in a material way
    low-impact: Low impact of material change

dependencies:
    blueimp-md5:
        used-for: Hashing of email addresses for use with the Gravatar service.
        comments:
            no-native: JavaScript does not feature a built-in MD5 implementation.
            no-node: The crypto module supports MD5. It doesn't seem possible to extract individual algorithms from crypto. The consequence is a minified bundle size of 431.78 KB compared with 4.86 KB for blueimp-md5 which is a significant difference.
            no-closer: According to [this issue](https://github.com/blueimp/JavaScript-MD5/issues/26), the original use case was to hash email addresses for Gravatar.
            no-deps: blueimp-md5 has zero dependencies.
            low-impact: The cost of identifying and integrating an alternative MD5 implementation is estimated to be low.

    lodash:
        used-for: Utility functions where there's no suitable built-in JavaScript alternative.
        comments:
            no-native: Many lodash utility functions do have suitable built-in JavaScript alternatives. lodash is only used where this is not the case.
            no-closer: Each lodash utility function does have a standalone package available on NPM. Given more than a couple of utility functions are being used, a single dependency on lodash is easier to manage.
            no-deps: lodash has zero dependencies.
            low-impact: The cost of identifying and integrating an alternative utility library is estimated to be low.

    module-composer:
        used-for: Composing modules in the composition root.
        comments:
            no-closer: This library was built with the specific constraints of Agile Avatars in mind.

    vanilla-picker:
        used-for: Changing the color of roles.
        checklist:
            low-impact: The cost of identifying and integrating an alternative color picker is estimated to be low.                
